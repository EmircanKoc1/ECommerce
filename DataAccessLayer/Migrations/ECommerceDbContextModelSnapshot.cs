// <auto-generated />
using System;
using DataAccessLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    partial class ECommerceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ClaimUser", b =>
                {
                    b.Property<long>("ClaimsId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("ClaimsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ClaimUser");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AdressDescription")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("AddressDescription")
                        .HasColumnOrder(6);

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("City")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(9);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(10);

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Street")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(8);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("UserId")
                        .HasColumnOrder(2);

                    b.Property<string>("Zipcode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Zipcode")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Brand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name")
                        .HasColumnOrder(2);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("Brands", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.BrandDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("BrandId")
                        .HasColumnType("bigint")
                        .HasColumnName("BrandId")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(8);

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Description")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("FoundedYear")
                        .HasColumnType("datetime2")
                        .HasColumnName("FoundedYear")
                        .HasColumnOrder(5);

                    b.Property<string>("LogoPath")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("LogoPath")
                        .HasColumnOrder(4);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(9);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("BrandId")
                        .IsUnique()
                        .HasFilter("[BrandId] IS NOT NULL");

                    b.ToTable("BrandDetails", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Description")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name")
                        .HasColumnOrder(2);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Claim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ClaimName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ClaimName")
                        .HasColumnOrder(3);

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ClaimType")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(6);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("Claims", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Comment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(9);

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("ProductId")
                        .HasColumnOrder(2);

                    b.Property<byte>("Score")
                        .HasColumnType("tinyint")
                        .HasColumnName("Score")
                        .HasColumnOrder(6);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(10);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Text")
                        .HasColumnOrder(5);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Title")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(8);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("UserId")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Coupon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(10);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Description")
                        .HasColumnOrder(3);

                    b.Property<double>("DiscountAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("DiscountAmount")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExprationDate")
                        .HasColumnOrder(7);

                    b.Property<double>("MinimumPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("MinimumPrice")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name")
                        .HasColumnOrder(2);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(11);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(9);

                    b.HasKey("Id");

                    b.ToTable("Coupons", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("AddressId")
                        .HasColumnType("bigint")
                        .HasColumnName("AddressId")
                        .HasColumnOrder(3);

                    b.Property<long?>("CouponId")
                        .HasColumnType("bigint")
                        .HasColumnName("CouponId")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(9);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(11);

                    b.Property<double>("DiscountAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("DiscountAmount")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("OrderDate")
                        .HasColumnOrder(6);

                    b.Property<long?>("ShipmentCompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("ShipmentCompanyId")
                        .HasColumnOrder(5);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(12);

                    b.Property<double>("TotalAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("TotalAmount")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(10);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("UserId")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CouponId");

                    b.HasIndex("ShipmentCompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(9);

                    b.Property<long?>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("OrderId")
                        .HasColumnOrder(2);

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Price")
                        .HasColumnOrder(5);

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("ProductId")
                        .HasColumnOrder(3);

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity")
                        .HasColumnOrder(4);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(10);

                    b.Property<double>("TotalPrice")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("float")
                        .HasColumnName("TotalPrice")
                        .HasColumnOrder(6)
                        .HasComputedColumnSql("[Price]*[Quantity]");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.OrderStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(9);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Description")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit")
                        .HasColumnName("IsCancel")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsFinal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPreparing")
                        .HasColumnType("bit")
                        .HasColumnName("IsPreparing")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsShipment")
                        .HasColumnType("bit")
                        .HasColumnName("IsShipment")
                        .HasColumnOrder(6);

                    b.Property<long?>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("OrderId")
                        .HasColumnOrder(2);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(10);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique()
                        .HasFilter("[OrderId] IS NOT NULL");

                    b.ToTable("OrderStatuses", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.PaymentCard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CCV")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("CCV")
                        .HasColumnOrder(8);

                    b.Property<string>("Company")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Company")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(9);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(11);

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpireDate")
                        .HasColumnOrder(7);

                    b.Property<string>("Number")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Number")
                        .HasColumnOrder(4);

                    b.Property<string>("PersonName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PersonName")
                        .HasColumnOrder(5);

                    b.Property<string>("PersonSurname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PersonSurname")
                        .HasColumnOrder(6);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(12);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(10);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("UserId")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PaymentCards", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("BrandId")
                        .HasColumnType("bigint")
                        .HasColumnName("BrandId")
                        .HasColumnOrder(4);

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("CategoryId")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(9);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(11);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Description")
                        .HasColumnOrder(6);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name")
                        .HasColumnOrder(5);

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Price")
                        .HasColumnOrder(7);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(12);

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int")
                        .HasColumnName("StockQuantity")
                        .HasColumnOrder(8);

                    b.Property<long?>("SubCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("SubCategoryId")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.ProductFeature", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Key")
                        .HasColumnOrder(3);

                    b.Property<long?>("ProductId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnName("ProductId")
                        .HasColumnOrder(2);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(6);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Value")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductFeatures", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.ProductImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(6);

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ImagePath")
                        .HasColumnOrder(3);

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("ProductId")
                        .HasColumnOrder(2);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.ShipmentCompany", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name")
                        .HasColumnOrder(2);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("ShipmentCompanies", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.ShipmentCompanyDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(8);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FoundedYear")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ShipmentCompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("ShipmentCompanyId")
                        .HasColumnOrder(2);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(9);

                    b.Property<int>("TotalFailedShipmentCount")
                        .HasColumnType("int")
                        .HasColumnName("TotalFailedShipmentCount")
                        .HasColumnOrder(4);

                    b.Property<int>("TotalShipmentCount")
                        .HasColumnType("int")
                        .HasColumnName("TotalShipmentCount")
                        .HasColumnOrder(3);

                    b.Property<int>("TotalSuccessfulShipmentCount")
                        .HasColumnType("int")
                        .HasColumnName("TotalSuccessfulShipmentCount")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("ShipmentCompanyId")
                        .IsUnique()
                        .HasFilter("[ShipmentCompanyId] IS NOT NULL");

                    b.ToTable("ShipmentCompanyDetails", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.SubCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("CategoryId")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(7);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Description")
                        .HasColumnOrder(4);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name")
                        .HasColumnOrder(3);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Description")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name")
                        .HasColumnOrder(2);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("Tags", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Token", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AccessToken")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("AccessToken")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(9);

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RefreshToken")
                        .HasColumnOrder(5);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(10);

                    b.Property<DateTime?>("TokenExpireDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("TokenExpireDate")
                        .HasColumnOrder(6);

                    b.Property<string>("TokenType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TokenType")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(8);

                    b.Property<long?>("UserId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnName("UserId")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Tokens", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("BirthDate")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasColumnOrder(10);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate")
                        .HasColumnOrder(12);

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Email")
                        .HasColumnOrder(5);

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("EmailConfirmed")
                        .HasColumnOrder(9);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name")
                        .HasColumnOrder(3);

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Password")
                        .HasColumnOrder(8);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PhoneNumber")
                        .HasColumnOrder(6);

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status")
                        .HasColumnOrder(13);

                    b.Property<string>("Surname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Surname")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate")
                        .HasColumnOrder(11);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Username")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("ProductTag", b =>
                {
                    b.Property<long>("ProductsId")
                        .HasColumnType("bigint");

                    b.Property<long>("TagsId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("ProductTag");
                });

            modelBuilder.Entity("ProductUser", b =>
                {
                    b.Property<long>("LikedProductsId")
                        .HasColumnType("bigint");

                    b.Property<long>("LikedUsersId")
                        .HasColumnType("bigint");

                    b.HasKey("LikedProductsId", "LikedUsersId");

                    b.HasIndex("LikedUsersId");

                    b.ToTable("ProductUser");
                });

            modelBuilder.Entity("ClaimUser", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Claim", null)
                        .WithMany()
                        .HasForeignKey("ClaimsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Address", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.User", "User")
                        .WithMany("Address")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.BrandDetail", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Brand", "Brand")
                        .WithOne("BrandDetail")
                        .HasForeignKey("DataAccessLayer.Entities.BrandDetail", "BrandId");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Comment", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId");

                    b.HasOne("DataAccessLayer.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Order", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Address", "Address")
                        .WithMany("Orders")
                        .HasForeignKey("AddressId");

                    b.HasOne("DataAccessLayer.Entities.Coupon", "Coupon")
                        .WithMany("Orders")
                        .HasForeignKey("CouponId");

                    b.HasOne("DataAccessLayer.Entities.ShipmentCompany", "ShipmentCompany")
                        .WithMany("Orders")
                        .HasForeignKey("ShipmentCompanyId");

                    b.HasOne("DataAccessLayer.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");

                    b.Navigation("Address");

                    b.Navigation("Coupon");

                    b.Navigation("ShipmentCompany");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.OrderItem", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("DataAccessLayer.Entities.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.OrderStatus", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Order", "Order")
                        .WithOne("OrderStatus")
                        .HasForeignKey("DataAccessLayer.Entities.OrderStatus", "OrderId");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.PaymentCard", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.User", "User")
                        .WithMany("PaymentCards")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Product", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId");

                    b.HasOne("DataAccessLayer.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("DataAccessLayer.Entities.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.ProductFeature", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Product", "Product")
                        .WithMany("Features")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.ProductImage", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.ShipmentCompanyDetail", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.ShipmentCompany", "ShipmentCompany")
                        .WithOne("ShipmentDetail")
                        .HasForeignKey("DataAccessLayer.Entities.ShipmentCompanyDetail", "ShipmentCompanyId");

                    b.Navigation("ShipmentCompany");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.SubCategory", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Token", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.User", "User")
                        .WithOne("Token")
                        .HasForeignKey("DataAccessLayer.Entities.Token", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProductTag", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductUser", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("LikedProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("LikedUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Address", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Brand", b =>
                {
                    b.Navigation("BrandDetail")
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Coupon", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("OrderStatus")
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Product", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Features");

                    b.Navigation("Images");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.ShipmentCompany", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ShipmentDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Entities.SubCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.User", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Comments");

                    b.Navigation("Orders");

                    b.Navigation("PaymentCards");

                    b.Navigation("Token")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
